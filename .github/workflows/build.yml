name: CI

on:
  push:
    branches: [ "master" ]
    tags: [ "v*" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: 
          - ubuntu-24.04
          - ubuntu-22.04
          - windows-2019
        build_type: [Release]
        c_compiler: [gcc, cl]
        include:
          - os: windows-2019
            c_compiler: cl
            cpp_compiler: cl
          - os: ubuntu-24.04
            c_compiler: gcc
            cpp_compiler: g++
          - os: ubuntu-22.04
            c_compiler: gcc
            cpp_compiler: g++

    steps:
    - uses: actions/checkout@v4

    - name: Set reusable strings
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

    - name: Configure CMake
      run: >
        cmake -B ${{ steps.strings.outputs.build-output-dir }}
        -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
        -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
        -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
        -S ${{ github.workspace }}

    - name: Build
      run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }}

    - name: Upload Binaries (Ubuntu)
      if: matrix.os == 'ubuntu-24.04' || matrix.os == 'ubuntu-22.04'
      uses: actions/upload-artifact@v4
      with:
        name: studiomdl++${{ matrix.os }}
        path: ${{ steps.strings.outputs.build-output-dir }}/bin/*
        if-no-files-found: error

    - name: Upload Binaries (Windows)
      if: matrix.os == 'windows-2019'
      uses: actions/upload-artifact@v4
      with:
        name: studiomdl++${{ matrix.os }}
        path: ${{ steps.strings.outputs.build-output-dir }}/bin/Release/*.exe
        if-no-files-found: error

  release:
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create release
        uses: softprops/action-gh-release@v2
        with:
          files: artifacts/**/*
          draft: false
          prerelease: false
